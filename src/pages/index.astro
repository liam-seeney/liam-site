---
import BaseLayout from "../layout/BaseLayout.astro";
import Hero from "../components/Hero.astro";
import "../styles/homepage.css";

const pageTitle = "Home";
---

<BaseLayout pageTitle={pageTitle}>
  <Hero />
  <div class="home-page-intro fade-in">
    <div class="intro-text">
      <p>
        We create inviting spaces that make life at home richer and more
        flexible. As timber-frame specialists, we design and build everything
        from garden offices, gyms and workshops to annexes, holiday cottages,
        garages, and elegant kitchen or living extensions. Timber-frame
        construction lets us deliver rooms that feel warm, comfortable and
        solid, with excellent thermal performance and a light environmental
        footprint thanks to sustainably sourced materials. Every project is
        finished to the same high standard, whether it’s a cosy garden retreat
        or a striking new extension — giving you a space that blends seamlessly
        with your home and enhances the way you live.
      </p>
      <div class="call-to-action fade-in">
        <p>
          If you're considering a renovation or extension,
          <a href="/contact"><b>get in touch</b></a> to see how I can bring your
          idea to life.
        </p>
      </div>
    </div>
  </div>

  <script>
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      { threshold: 0.2 }
    );

    document.querySelectorAll(".fade-in").forEach((el) => observer.observe(el));
  </script>

  <script>
    (function () {
      // Smooth parallax using requestAnimationFrame and transform on .hero-bg
      const bg = document.querySelector(".hero-bg") as HTMLElement | null;
      if (!bg) return;

      // Mobile detection
      const isMobile = () => window.matchMedia("(max-width: 768px)").matches;

      let latestScroll = 0;
      let ticking = false;
      let intensity = 0.25; // base intensity for desktop
      let currentY = 0; // used for lerp
      let ease = 0.08; // lerp factor: smaller = smoother/laggier

      // Mobile-specific settings (reduced displacement, faster follow)
      const mobileSettings = {
        intensity: 0.12,
        ease: 0.12,
        maxTranslate: 60, // px - clamp so the background doesn't move too far on small screens
      };

      // Apply mobile settings if appropriate
      function applySettings() {
        if (isMobile()) {
          intensity = mobileSettings.intensity;
          ease = mobileSettings.ease;
        } else {
          intensity = 0.25;
          ease = 0.08;
        }
      }

      applySettings();

      function onScroll() {
        latestScroll = window.scrollY;
        requestTick();
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(update);
          ticking = true;
        }
      }

      function update() {
        // Target position based on scroll, scaled by intensity
        let targetY = latestScroll * intensity;

        // clamp on mobile to avoid large translations
        if (isMobile() && mobileSettings.maxTranslate) {
          targetY = Math.max(
            Math.min(targetY, mobileSettings.maxTranslate),
            -mobileSettings.maxTranslate
          );
        }

        // Lerp currentY towards targetY for smooth easing
        currentY += (targetY - currentY) * ease;

        // Round to whole pixels for slightly better performance
        const displayY = Math.round(currentY);

        bg!.style.transform = `translate3d(0, ${displayY}px, 0)`;

        // Continue the rAF loop if we're still moving or new scrolls arrive
        // If difference is small, consider the animation settled
        if (Math.abs(currentY - targetY) > 0.5) {
          requestAnimationFrame(update);
        } else {
          ticking = false;
        }
      }

      window.addEventListener("scroll", onScroll, { passive: true });

      // Recompute on resize (enable/disable on mobile)
      window.addEventListener("resize", () => {
        if (isMobile()) {
          bg!.style.transform = "";
          window.removeEventListener("scroll", onScroll);
        } else {
          window.addEventListener("scroll", onScroll, { passive: true });
        }
      });
    })();
  </script>
</BaseLayout>
